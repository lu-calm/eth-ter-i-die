{"ast":null,"code":"var Intro, DappsSumm, End, FetchAddress, FileSumm;\nexport function introAndEndData() {\n  if (document.getElementById('Options').value = 1) {\n    fetch('/SetData/intro.txt').then(response => response.text()).then(data => {\n      Intro = data;\n    });\n    fetch('/SetData/end.txt').then(response => response.text()).then(data => {\n      End = data;\n    });\n  } else {\n    // Pro package is checked\n    Intro = \"\";\n    End = \"\";\n  }\n}\nexport function fetchDappData(value) {\n  FetchAddress = value;\n  fetch(FetchAddress).then(response => response.text()).then(data => {\n    DappsSumm += data;\n  });\n}\nexport function getSelectedCheckboxValues() {\n  DappsSumm = \"\";\n  const checkboxes = document.querySelectorAll(\"input[type='checkbox']:checked\");\n  var values = [];\n  checkboxes.forEach(checkbox => {\n    values.push(checkbox.value);\n  });\n  values.forEach(fetchDappData);\n}\nexport function gather() {\n  return FileSumm = Intro + DappsSumm + End;\n}\nexport function download_FS(name, contents) {\n  var FileSaver = require('file-saver');\n\n  var blob = new Blob([contents], {\n    type: \"text/plain;charset=utf-8\"\n  });\n  FileSaver.saveAs(blob, name);\n}","map":{"version":3,"sources":["/home/m/Projects/Eth-ter-I-Die-Pretty/react-bootstrap-app/src/core.js"],"names":["Intro","DappsSumm","End","FetchAddress","FileSumm","introAndEndData","document","getElementById","value","fetch","then","response","text","data","fetchDappData","getSelectedCheckboxValues","checkboxes","querySelectorAll","values","forEach","checkbox","push","gather","download_FS","name","contents","FileSaver","require","blob","Blob","type","saveAs"],"mappings":"AAAA,IAAIA,KAAJ,EAAWC,SAAX,EAAsBC,GAAtB,EAA2BC,YAA3B,EAAyCC,QAAzC;AAIA,OAAO,SAASC,eAAT,GAA2B;AAClC,MAAIC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,GAA2C,CAA/C,EAAkD;AAC5CC,IAAAA,KAAK,CAAC,oBAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEOG,IAAD,IAAU;AACdb,MAAAA,KAAK,GAAGa,IAAR;AACD,KAJD;AAMAJ,IAAAA,KAAK,CAAC,kBAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdX,MAAAA,GAAG,GAAGW,IAAN;AACD,KAJH;AAKL,GAZD,MAYO;AACH;AACAb,IAAAA,KAAK,GAAG,EAAR;AACAE,IAAAA,GAAG,GAAG,EAAN;AAEH;AACA;AAMD,OAAO,SAASY,aAAT,CAAuBN,KAAvB,EAA6B;AACjCL,EAAAA,YAAY,GAAGK,KAAf;AACAC,EAAAA,KAAK,CAACN,YAAD,CAAL,CACEO,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAEEF,IAFF,CAEQG,IAAD,IAAU;AAChBZ,IAAAA,SAAS,IAAIY,IAAb;AACC,GAJF;AAKE;AAEL,OAAO,SAASE,yBAAT,GAAoC;AACtCd,EAAAA,SAAS,GAAG,EAAZ;AACD,QAAMe,UAAU,GAAGV,QAAQ,CAACW,gBAAT,CAA0B,gCAA1B,CAAnB;AACI,MAAIC,MAAM,GAAG,EAAb;AACAF,EAAAA,UAAU,CAACG,OAAX,CAAoBC,QAAD,IAAc;AAC7BF,IAAAA,MAAM,CAACG,IAAP,CAAYD,QAAQ,CAACZ,KAArB;AACH,GAFD;AAGDU,EAAAA,MAAM,CAACC,OAAP,CAAeL,aAAf;AACD;AAEN,OAAO,SAASQ,MAAT,GAAiB;AACrB,SAAOlB,QAAQ,GAAGJ,KAAK,GAAGC,SAAR,GAAoBC,GAAtC;AACD;AAEF,OAAO,SAASqB,WAAT,CAAqBC,IAArB,EAA0BC,QAA1B,EAAoC;AACpC,MAAIC,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AACA,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACJ,QAAD,CAAT,EAAqB;AAACK,IAAAA,IAAI,EAAE;AAAP,GAArB,CAAX;AACAJ,EAAAA,SAAS,CAACK,MAAV,CAAiBH,IAAjB,EAAuBJ,IAAvB;AACN","sourcesContent":["var Intro, DappsSumm, End, FetchAddress, FileSumm;\n\n\n\nexport function introAndEndData() {\nif (document.getElementById('Options').value = 1) {\n      fetch('/SetData/intro.txt')\n      .then(response => response.text())\n      .then((data) => {\n        Intro = data;\n      })\n\n      fetch('/SetData/end.txt')\n        .then(response => response.text())\n        .then((data) => {\n          End = data;\n        })\n} else {\n    // Pro package is checked\n    Intro = \"\"\n    End = \"\"\n\n}\n}\n\n\n\n\n\nexport function fetchDappData(value){\n   FetchAddress = value;\n   fetch(FetchAddress)\n    .then(response => response.text())\n    .then((data) => {\n    DappsSumm += data;\n    })\n    }\n\nexport function getSelectedCheckboxValues(){\n     DappsSumm = \"\"\n    const checkboxes = document.querySelectorAll(\"input[type='checkbox']:checked\");\n        var values = [];\n        checkboxes.forEach((checkbox) => {\n            values.push(checkbox.value);\n        });\n       values.forEach(fetchDappData);\n     }\n\nexport function gather(){\n   return FileSumm = Intro + DappsSumm + End;\n }\n\nexport function download_FS(name,contents) {\n       var FileSaver = require('file-saver');\n       var blob = new Blob([contents], {type: \"text/plain;charset=utf-8\"});\n       FileSaver.saveAs(blob, name);\n}\n"]},"metadata":{},"sourceType":"module"}