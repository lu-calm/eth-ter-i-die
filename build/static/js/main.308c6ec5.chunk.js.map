{"version":3,"sources":["core.js","EtIDSelection.js","EtIDDownload.js","EtIDHeader.js","EtIDAdvSet.js","home.js","searchtable.js","textfiles.js","support.js","personalsocials.js","about.js","EtIDNav.js","socialshare.js","sitesocials.js","EtIDFooter.js","App.js","index.js","logoxs.svg"],"names":["Intro","End","DappsSumm","introAndEndData","fetch","then","response","text","data","fetchDappData","value","getSelectedCheckboxValues","checkboxes","document","querySelectorAll","values","forEach","checkbox","push","EtIDSelection","Container","fluid","Row","className","Col","class","ToggleButtonGroup","type","name","ToggleButton","variant","onChange","disabled","MyVerticallyCenteredModal","props","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","Footer","Button","onClick","contents","FileSaver","require","blob","Blob","saveAs","download_FS","onHide","EtIDDownload","React","useState","modalShow","setModalShow","show","EtIDHeader","Image","width","src","logo","alt","href","target","rel","Accordion","Card","Toggle","as","eventKey","Collapse","to","EtIDAdvSet","Home","Component","SearchBar","Search","ClearSearchButton","products","dapplink","flink","columns","dataField","hidden","sort","formatter","cell","row","rowIndex","options","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","sizePerPageList","SearchTable","keyField","search","searchProps","baseProps","bootstrap4","striped","hover","pagination","paginationFactory","TextFiles","Support","aria-label","role","url","bgColor","PersonalSocial","About","EtIDNav","exact","path","component","SharingButtons","shareText","SiteSocial","style","height","EtIDFooter","Jumbotron","window","onload","App","ReactDOM","render","basename","process","getElementById","module","exports"],"mappings":"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","file":"static/js/main.308c6ec5.chunk.js","sourcesContent":["var Intro, DappsSumm = \"\", End, FetchAddress, FileSumm, IntroEndStatus;\n\n\n\nexport function introAndEndData() {\n\n      fetch('/BaseData/intro.txt')\n      .then(response => response.text())\n      .then((data) => {\n        Intro = data\n        IntroEndStatus = \"Full\";\n      })\n\n      fetch('/BaseData/end.txt')\n        .then(response => response.text())\n        .then((data) => {\n          End = data;\n        })\n}\n\nexport function remvoveIntroAndEndData() {\n  Intro = \"\"\n  End = \"\"\n  IntroEndStatus = \"Empty\"\n}\n\nexport function returnintroEndStatus(){\n  return IntroEndStatus\n}\n\nexport function fetchDappData(value){\n   FetchAddress = value;\n   fetch(FetchAddress)\n    .then(response => response.text())\n    .then((data) => {\n    DappsSumm += data;\n    })\n    }\n\nexport function getSelectedCheckboxValues(){\n     DappsSumm = \"\"\n    const checkboxes = document.querySelectorAll(\"input[type='checkbox']:checked\");\n        var values = [];\n        checkboxes.forEach((checkbox) => {\n            values.push(checkbox.value);\n        });\n       values.forEach(fetchDappData);\n     }\n\nexport function gather(){\n   return FileSumm = Intro + DappsSumm + End;\n }\n\nexport function download_FS(name,contents) {\n       var FileSaver = require('file-saver');\n       var blob = new Blob([contents], {type: \"text/plain;charset=utf-8\"});\n       FileSaver.saveAs(blob, name);\n}\n","\nimport React from 'react';\n\nimport { Container, Row, Col, ToggleButton, ToggleButtonGroup } from 'react-bootstrap'\nimport { getSelectedCheckboxValues} from './core.js';\n\n\n\nconst EtIDSelection= () => (\n <Container fluid >\n <Row className=\"justify-content-md-center\">\n   <Col>\n       <h3 class=\"text-center\">Blockchain Explorer</h3>\n       <p class=\"text-center\">\nPlease select the Blockchain Explorer you wish you beneficiaries to use. It is recommended that you pick a Blockchain Explorer as it helps reiterate concepts described in the Intro text before moving Ether or Ethereum based assets.\n       </p>\n       </Col>\n </Row>\n\n <Row>\n\n\n <Col>\n<div class=\"d-flex justify-content-center\">\n<ToggleButtonGroup type='checkbox' name='BlockChainExplorer'>\n<ToggleButton variant=\"outline-dark\" onChange={getSelectedCheckboxValues} value='/DappData/etherscan.txt' >Etherscan</ToggleButton>\n<ToggleButton variant=\"outline-dark\" onChange={getSelectedCheckboxValues} value='/DappData/ethvm.txt' >EthVM</ToggleButton>\n</ToggleButtonGroup>\n</div>\n     </Col>\n   </Row>\n\n\n     <br />\n   <Row className=\"justify-content-md-center\">\n     <Col>\n         <h3 class=\"text-center\">On Ramp/ Off Ramp</h3>\n         <p class=\"text-center\">\nPlease select your chosen On-Ramp/ Off-Ramp for your beneficiaries to transfer your Ether and Ethereum based tokens to their local currency.\n         </p>\n     </Col>\n   </Row>\n\n\n <Row>\n   <Col>\n  <div class=\"d-flex justify-content-center\">\n  <ToggleButtonGroup type='checkbox' name='On Ramp/ Off Ramp'>\n  <ToggleButton variant=\"outline-dark\" onChange={getSelectedCheckboxValues} value='/DappData/coinbase.txt' >Coinbase</ToggleButton>\n  <ToggleButton variant=\"outline-dark\" onChange={getSelectedCheckboxValues} value='/DappData/uphold.txt' >Uphold</ToggleButton>\n\n   </ToggleButtonGroup>\n  </div>\n       </Col>\n     </Row>\n\n\n     <br />\n    <Row className=\"justify-content-md-center\">\n     <Col>\n         <h3 class=\"text-center\">Wallet and DApp Gateway</h3>\n         <p class=\"text-center\">\nPlease select a Wallet and Dapp gateway you wish your beneficiaries to use throughout this process. Note: This Wallet and Dapp Gateway must be compatible with the rest of the DApps and Services you have selected.\n         </p>\n     </Col>\n    </Row>\n\n\n    <Row>\n    <Col>\n    <div class=\"d-flex justify-content-center\">\n    <ToggleButtonGroup type='checkbox' name='Wallet and DApp Gateway'>\n    <ToggleButton variant=\"outline-dark\" onChange={getSelectedCheckboxValues} value='/DappData/metamask.txt' >MetaMask</ToggleButton>\n\n    </ToggleButtonGroup>\n    </div>\n       </Col>\n     </Row>\n\n     <br />\n    <Row className=\"justify-content-md-center\">\n     <Col>\n         <h3 class=\"text-center\">Alternate Wallets</h3>\n         <p class=\"text-center\">\nPlease select a an Alternate Wallet you wish your beneficiaries to access.\n         </p>\n     </Col>\n    </Row>\n\n\n    <Row>\n    <Col>\n    <div class=\"d-flex justify-content-center\">\n    <ToggleButtonGroup type='checkbox' name='Alternate Wallets'>\n    <ToggleButton variant=\"outline-dark\" onChange={getSelectedCheckboxValues} value='/DappData/ledger.txt' disabled>Coming Soon</ToggleButton>\n\n    </ToggleButtonGroup>\n    </div>\n       </Col>\n     </Row>\n\n     <br />\n    <Row className=\"justify-content-md-center\">\n     <Col>\n         <h3 class=\"text-center\">DApps and Services</h3>\n         <p class=\"text-center\">\nPlease select the DApps and Services your beneficiaries will need to interact with in order to retrieve your Ether and Ethereum based tokens.\n         </p>\n     </Col>\n    </Row>\n\n\n    <Row>\n    <Col>\n    <div class=\"d-flex justify-content-center\">\n    <ToggleButtonGroup type='checkbox' name='DApps and Services'>\n    <ToggleButton variant=\"outline-dark\" onChange={getSelectedCheckboxValues} value='/DappData/compound.txt' >Compound</ToggleButton>\n    <ToggleButton variant=\"outline-dark\" onChange={getSelectedCheckboxValues} value='/DappData/pooltogether.txt' >PoolTogether</ToggleButton>\n    <ToggleButton variant=\"outline-dark\" onChange={getSelectedCheckboxValues} value='/DappData/easystaking.txt' >Easy Staking</ToggleButton>\n\n    </ToggleButtonGroup>\n    </div>\n       </Col>\n     </Row>\n\n     <br />\n    <Row className=\"justify-content-md-center\">\n     <Col>\n         <h3 class=\"text-center\">Exchanges</h3>\n         <p class=\"text-center\">\n         Please select your chosen Exchanges for your beneficiaries  to use in order to transfer your Ethereum based tokens to Ether. Within this section there is a “Note for the Author” where you will need to follow the instructions. in order for as many of the tokens to be retrieved as possible.\n         </p>\n     </Col>\n    </Row>\n\n\n    <Row>\n    <Col>\n    <div class=\"d-flex justify-content-center\">\n    <ToggleButtonGroup type='checkbox' name='Exchanges'>\n    <ToggleButton variant=\"outline-dark\" onChange={getSelectedCheckboxValues} value='/DappData/uniswap.txt' >Uniswap</ToggleButton>\n\n    </ToggleButtonGroup>\n    </div>\n       </Col>\n     </Row>\n\n       </Container>\n);\n\n\nexport default EtIDSelection;\n","import React from 'react';\n\nimport { Button, Modal, Row, Col } from 'react-bootstrap'\nimport { gather, download_FS} from './core.js';\n\nfunction EtIDDownload() {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  return (\n    <>\n\n\n    <Row>\n    <Col>\n    <div class=\"d-flex justify-content-center\">\n\n        <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n        Download File\n      </Button>\n</div>\n      <MyVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n      </Col>\n  </Row>\n    </>\n  );\n}\n\nfunction MyVerticallyCenteredModal(props) {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Disclaimer\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n          <p class=\"text-break\">\nBy confirming this .txt file download you are agreeing that Eth-ter-I-Die and associated parties are not liable for any loss of Ether or Ethereum tokens/ assets that may occur during this process.\n  </p>\n  <p class=\"text-break\">\nThis is a literal “How to Guide” of removing your Ethereum assets.\n</p>\n<p class=\"text-break\">\nDo Not save any seed phrase digitally and keep the completed document in a safe place.\n        </p>\n\n      </Modal.Body>\n      <Modal.Footer>\n      <Button variant=\"primary\" type=\"submit\" onClick={() => { download_FS(\"Eth-ter-I-Die.txt\", gather()) }}>Agree and Download</Button>\n        <Button variant=\"secondary\" onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\n\n export default EtIDDownload;\n","import React from 'react';\n\nimport { Accordion, Container, Card, Row, Col, Image} from 'react-bootstrap'\n\nimport { NavLink } from \"react-router-dom\";\n\nimport logo from './logoxs.svg';\n\n\n\n  //check if need to justufy content below!\nconst EtIDHeader = () => (\n<Container fluid >\n\n  <Row className=\"justify-content-md-center\">\n  <Col>\n<Image width=\"180\" className=\"rounded mx-auto d-block\" src={logo} alt=\"Logo\" />\n\n    </Col>\n  </Row>\n\n  <Row className=\"justify-content-md-center\">\n    <Col>\n        <h1 class=\"text-center\">Eth-ter-I-Die</h1>\n        <p class=\"text-center\">\n        Don’t let your Ethereum assets be lost to the blockchain when you die.\n        </p>\n        <p class=\"text-center\">\nEth-ter-I-Die produces instructions for your non-technical beneficiary to convert your Ethereum  Tokens, from a variety of different DApps, to Ether and transfer that Ether to your beneficiaries local currency. Once completing your selection of DApps and services a .txt file is generated that allows you to edit, print and then hand write the private details required for your beneficiaries to access your address/ wallets. This document should be kept as safe as your seed phrase as it is a literal \"how to guide\" on accessing all of your Ethereum based assets. \n        </p>\n<p class=\"text-center\">\nAdditional options/ selections coming soon, please send suggestions to me on <a href=\"https://twitter.com/lu_calm\" target=\"_blank\" rel=\"noopener noreferrer\">\n  my Twitter\n</a>.\n    </p>\n    </Col>\n  </Row>\n\n      <Row>\n      <Col>\n      <Accordion>\n  <Card>\n    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n    Instructions\n    </Accordion.Toggle>\n    <Accordion.Collapse eventKey=\"0\">\n      <Card.Body>\n<p>\n\n      Select the DApps and services below that you use, Eth-ter-I-Die generates a .txt file to download with a basic introduction to Ethereum and removal instructions for you to print. Read the document carefully to confirm the instructions are correct and add in any additional comments.\n</p>\n<p>\n      All private and preference fields are left blank (i.e. __________ ) for you to <kbd>hand write</kbd> once the document is printed.\n</p>\n<p>\n<kbd>For your security reasons, DO NOT type in this information and save the document to your computer.</kbd>\n</p>\n<p>\n      From here you need to make sure that document is kept as secure as possible. It is a literal “How to Guide” of removing your Ethereum assets, you do not want it in the wrong hands.\n</p>\n\n<p>\nFor further advice on how best to use Eth-ter-I-Die, check out the <NavLink to=\"/about\">About section</NavLink>\n</p>\n</Card.Body>\n    </Accordion.Collapse>\n  </Card>\n\n</Accordion>\n      </Col>\n      </Row>\n</Container>\n);\n\n  export default EtIDHeader;\n","import React from 'react';\n\nimport { Button, Container, Card, Row, Col, Accordion } from 'react-bootstrap'\n\nimport { introAndEndData, remvoveIntroAndEndData } from './core.js';\n\n\n\nconst EtIDAdvSet= () => (\n\n <Container fluid>\n <Row>\n <Col>\n   <Accordion>\n     <Card>\n         <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n           Advanced Settings\n         </Accordion.Toggle>\n\n       <Accordion.Collapse eventKey=\"0\">\n         <Card.Body>\n         <h4>Include/ Exclude Intro and End Sections</h4>\n         <p>\n         Chose below if you want to include or exclude the \"Intro\" and \"End\" text sections generated by Eth-ter-I-Die. Excluding this content is useful for those using Eth-ter-I-Die for multiple wallets.\n         </p>\n\n         <Row className=\"justify-content-md-center\">\n         <Col class=\"col-sm-offset-3 col-sm-2\" >\n        <Button variant=\"success\" type=\"submit\" onClick={() => { introAndEndData() }}>Include (Default)</Button>\n         </Col>\n         <Col class=\"col-sm-offset-1 col-sm-2\" >\n        <Button variant=\"danger\" type=\"submit\" onClick={() => { remvoveIntroAndEndData() }}>Exclude</Button>\n\n\n        </Col>\n</Row>\n\n         </Card.Body>\n       </Accordion.Collapse>\n     </Card>\n     </Accordion>\n   </Col>\n\n   </Row>\n </Container>\n );\n\n export default EtIDAdvSet;\n","import React, { Component } from \"react\";\n\nimport EtIDSelection from './EtIDSelection.js';\nimport EtIDDownload from './EtIDDownload.js';\nimport EtIDHeader from './EtIDHeader.js';\nimport EtIDAdvSet from './EtIDAdvSet.js';\n\nclass Home extends Component {\n  render() {\n    return (\n<>\n      <EtIDHeader />\n      <br />\n      <EtIDSelection />\n      <br />\n      <EtIDDownload />\n      <br />\n      <EtIDAdvSet />\n      </>\n    );\n  }\n}\n\nexport default Home;\n","\nimport React from 'react';\n\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\n\nconst { SearchBar, ClearSearchButton } = Search;\n\nconst linkFormatterA = (cell, row, rowIndex) => {\n  return (\n    <a href={cell} target=\"_blank\" rel=\"noopener noreferrer\">\n      Website/ DApp Link\n    </a>\n  );\n};\n\nconst linkFormatterB = (cell, row, rowIndex) => {\n  return (\n    <a href={cell} target=\"_blank\" rel=\"noopener noreferrer\">\n      Link to File\n    </a>\n  );\n};\n\n\nconst products = [\n      {\n        id: 1,\n        'name': 'Etherscan',\n        'category': 'Blockchain Explorers',\n        dapplink: 'https://etherscan.io/',\n        flink:'/DappData/etherscan.txt'\n\n      },\n      {\n        id: 2,\n        'name': 'Coinbase',\n        'category': 'On Ramps/ Off Ramps',\n        dapplink: 'https://www.coinbase.com/',\n        flink : '/DappData/coinbase.txt'\n      },\n      {\n        id: 3,\n        'name': 'Metamask',\n        'category': 'Wallet and DApp Gateways',\n        dapplink: 'https://metamask.io/',\n        flink : '/DappData/metamask.txt'\n      },\n      {\n        id: 4,\n        'name': 'Introduction Text',\n        'category': 'Intro',\n        dapplink: 'https://eth-ter-i-die.rip/',\n        flink : '/BaseData/intro.txt'\n      },\n      {\n        id: 5,\n        'name': 'End Text',\n        'category': 'End',\n        dapplink: 'https://eth-ter-i-die.rip/',\n        flink : '/BaseData/end.txt'\n      },\n      {\n        id: 6,\n        'name': 'Uniswap',\n        'category': 'Exchanges',\n        dapplink: 'https://uniswap.org/',\n        flink : '/DappData/uniswap.txt'\n      },\n      {\n        id: 7,\n        'name': 'Compound',\n        'category': 'DApps and Services',\n        dapplink: 'https://compound.finance/',\n        flink : '/DappData/compound.txt'\n      },\n      {\n        id: 8,\n        'name': 'EthVM',\n        'category': 'Blockchain Explorers',\n        dapplink: 'https://www.ethvm.com/',\n        flink : '/DappData/ethvm.txt'\n      },\n      {\n        id: 9,\n        'name': 'PoolTogether',\n        'category': 'DApps and Services',\n        dapplink: 'https://www.pooltogether.com/',\n        flink : '/DappData/pooltogether.txt'\n      },\n      {\n        id: 10,\n        'name': 'Uphold',\n        'category': 'On Ramps/ Off Ramps',\n        dapplink: 'https://www.uphold.com/',\n        flink : '/DappData/uphold.txt'\n      },\n      {\n        id: 11,\n        'name': 'Easy Staking',\n        'category': 'DApps and Services',\n        dapplink: 'https://easy-staking.xdaichain.com/',\n        flink : '/DappData/easystaking.txt'\n      },\n    ]\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID',\n      hidden: true\n    }, {\n      dataField: 'name',\n      text: 'Product Name',\n       sort: true\n    }, {\n      dataField: 'category',\n      text: 'Category',\n       sort: true\n    }, {\n    dataField: 'dapplink',\n    text: 'Website/ DApp Link',\n    formatter: linkFormatterA\n  },  {\n    dataField: \"flink\",\n    text: \"File Link\",\n    formatter: linkFormatterB\n  }\n];\n\n\n\n\n    const options = {\n            pageStartIndex: 1,\n            firstPageText: 'First',\n            prePageText: 'Back',\n            nextPageText: 'Next',\n            lastPageText: 'Last',\n            nextPageTitle: 'First page',\n            prePageTitle: 'Pre page',\n            firstPageTitle: 'Next page',\n            lastPageTitle: 'Last page',\n            showTotal: true,\n            sizePerPageList: [{\n              text: '5', value: 5\n            }, {\n              text: '10', value: 10\n            }, {\n              text: '25', value: 25\n              }]\n          };\n\nconst SearchTable= () => (\n\n<ToolkitProvider\n  keyField=\"id\"\n  data={ products }\n  columns={ columns }\n  search\n\n>\n  {\n    props => (\n      <div>\n        <SearchBar { ...props.searchProps } />\n        <ClearSearchButton { ...props.searchProps } />\n        <hr />\n        <BootstrapTable\n          { ...props.baseProps }\n          bootstrap4\n          striped\n          hover\n          pagination={ paginationFactory(options) }\n        />\n      </div>\n    )\n  }\n</ToolkitProvider>\n\n\n);\n  export default SearchTable;\n","import React, { Component } from \"react\";\n\nimport SearchTable from './searchtable.js';\n\n\nclass TextFiles extends Component {\n  render() {\n    return (\n\n      <div>\n        <h2>The Files</h2>\n        <p>Use the table below to view the text files of the DApp or service you wish to use.</p>\n\n        <SearchTable />\n\n      </div>\n    );\n  }\n}\n\nexport default TextFiles;\n","import React, { Component } from \"react\";\nimport { Container, Card, Accordion } from 'react-bootstrap'\nimport { SocialIcon } from 'react-social-icons';\n\n\nclass Support extends Component {\n  render() {\n    return (\n      <Container>\n        <h2>Support Eth-ter-I-Die</h2>\n        <Accordion>\n\n        <Card>\n          <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n            Donation\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n\n            <p class=\"text-center\">\nI strongly believe Eth-ter-I-Die should be a free service for all of the Ethereum community to benefit from. However there are costs associated in keeping it running and improving.\n          </p>\n\n          <p class=\"text-center\">\nIf you are happy with this service and want to support future features, a donation would be greatly appreciated. Thank you\n          {'  '} <span aria-label=\"Beaming Smiley Face\" role=\"img\">&#128522;</span>\n\n  </p>\n<p class=\"text-center\">\nDonation Address: 0xa28910bcbe9a1b9119940343c02cae65c1b22cc5\n</p>\n\n<p class=\"text-center\">\n<a href=\"https://etherscan.io/address/0xa28910bcbe9a1b9119940343c02cae65c1b22cc5\" target=\"_blank\" rel=\"noopener noreferrer\">\n  View on Etherscan\n</a>\n          </p>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n\n\n\n        <Card>\n        <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n        Development\n        </Accordion.Toggle>\n        <Accordion.Collapse eventKey=\"1\">\n          <Card.Body>\n        <p class=\"text-center\">\nBear with me, I have a full time job but I do I work on Eth-ter-I-Die as and when I can.\n  </p>\n\n  <p class=\"text-center\">\nI will keep adding new DApps, services and features for the betterment for it to be more useful for more people.\n</p>\n\n<p class=\"text-center\">\nI am quite new to coding so it is a bit of a learning curve! If you would like to help improve the shambles of code I have written, here is the GitHub account.\n</p>\n<p class=\"text-center\">\n<SocialIcon url=\"https://github.com/lu-calm/eth-ter-i-die\" bgColor=\"#000000\"/>\n</p>\n\n  <p class=\"text-center\">\nYou can witness my struggles of the development process on my YouTube channel.  </p>\n<p class=\"text-center\">\n  <SocialIcon url=\"https://www.youtube.com/channel/UC9GTIw90lZei5mUfjmTf7fg\" bgColor=\"#000000\"/>\n\n\n\n        </p>\n          </Card.Body>\n        </Accordion.Collapse>\n        </Card>\n\n\n        <Card>\n        <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n        Feedback and Suggestions (including new DApp requests)\n        </Accordion.Toggle>\n        <Accordion.Collapse eventKey=\"2\">\n          <Card.Body>\n        <p class=\"text-center\">\n        If you have some feedback or suggestions for Eth-ter-I-Die, please contact me via <a href=\"https://twitter.com/lu_calm\" target=\"_blank\" rel=\"noopener noreferrer\">\n          my Twitter\n        </a>.\n        </p>\n        <p class=\"text-center\">\n        Also let me know, via twitter, if you have any requests for new DApps or services to be added to Eth-ter-I-Die. I will try my best to add them ASAP!\n      </p>\n      <p class=\"text-center\">\n\n      Anyway, cheers for reading all of this, I hope you have a great day.\n      </p>\n\n      <p class=\"text-center\">\n      <SocialIcon url=\"https://twitter.com/lu_calm\" bgColor=\"#000000\"/>\n              </p>\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n\n    </Accordion>\n</Container>\n\n\n\n\n\n\n\n\n    );\n  }\n}\n\nexport default Support;\n","import React from 'react';\n\nimport { SocialIcon } from 'react-social-icons';\n\n\nconst PersonalSocial = () => {\n    return (\n    <div>\n     <p class=\"text-center\">\n     <SocialIcon url=\"https://twitter.com/lu_calm\" bgColor=\"#000000\"/> {'  '}\n     <SocialIcon url=\"https://www.youtube.com/channel/UC9GTIw90lZei5mUfjmTf7fg\" bgColor=\"#000000\"/>{'  '}\n     <SocialIcon url=\"https://github.com/lu-calm\" bgColor=\"#000000\"/> {'  '}\n\n      </p>\n\n    </div>\n  )\n}\n\n\nexport default PersonalSocial;\n","import React, { Component } from \"react\";\nimport { Container, Card, Accordion } from 'react-bootstrap'\nimport { NavLink } from \"react-router-dom\";\nimport { SocialIcon } from 'react-social-icons';\n\nimport PersonalSocial from './personalsocials.js';\n\nclass About extends Component {\n  render() {\n    return (\n      <Container>\n        <h4>What's this all about then?</h4>\n        <Accordion>\n\n        <Card>\n          <Accordion.Toggle as={Card.Header} eventKey=\"4\">\n            Latest News and Updates\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"4\">\n            <Card.Body>\n          <p>\n          <dl>\n          <dt>30/08/2020</dt>\n       <dd>Additonal content added</dd>\n      <dd>- MetaMask</dd>\n        <dd>- Uniswap</dd>\n          <dd>- Website content improved</dd>\n          </dl></p>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n              Story Time\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>\n            <p class=\"text-break\">\n            Well done.\n            </p>\n            <p class=\"text-break\">\n            You have started accumulating Ethereum and Ethereum based tokens. You have great foresight, however, not enough to see the Number 42 bus when you cross the road tomorrow morning at 8:14am.\n            </p>\n            <p class=\"text-break\">You have ceased to be, bereft of life, you rest in peace, you have kicked the bucket, hopped the twig, bit the dust, snuffed it, breathed your last, and gone to meet the Great Head of Blockchain Technologies in the sky.</p>\n            <p class=\"text-break\">So, what is going to happen to your Ethereum assets now?</p>\n            <p class=\"text-break\">Your hardware wallet is passed over as a malfunctioning USB and recycled as e-waste.</p>\n            <p class=\"text-break\">Your wallet seed phrase, kept on a crumpled note, is overlooked as nonsense and recycled.</p>\n            <p class=\"text-break\">Who’s going to benefit from all the time and money you’ve invested in Ethereum; all that learning, developing and acquiring?  Currently the refuge collector is the odds-on favourite but likely the worth you have created will be lost forever. It will be your anonymous blockchain memorial to what might have been.</p>\n            <p class=\"text-break\">This does not have to be the case.</p>\n            <h4> I present to you Eth-ter-I-Die!</h4>\n\n            </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n              Assumptions, Advice and Tips\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"1\">\n              <Card.Body>\n              <p class=\"text-break\">\n              - The generated template will inform your loved ones on how to transfer your Ethereum assets to Ether first and then to fiat. This is in order to reduced complexity and minimise confusion.\n              </p>\n              <p class=\"text-break\">\n              - The content has been kept as concise as possible for the instructions to be followed as safely as possible. Some principles of Ethereum have been omitted for the purposed of reducing complexity. If you have suggestions of content improvements please contact me on <a href=\"https://twitter.com/lu_calm\" target=\"_blank\" rel=\"noopener noreferrer\">\n                my Twitter\n              </a>.\n              </p>\n              <p class=\"text-break\">\n              - It is assumed you have enough Ether/ Gwei in your account to cover the transaction fees.\n\n              </p>\n              <p class=\"text-break\">\n              - Content for all the selections can be found in <NavLink to=\"/textfiles\">The Files section</NavLink>.\n              </p>\n              <p class=\"text-break\">\n- Please make your handwriting as easy to read as possible.\n</p>\n<p class=\"text-break\">\n- Additional wallets can be accommodated by re-doing the form for each wallet. You can remove the Intro and End text by clicking on advanced settings and clicking the “Exclude” button. Or you can edit the .txt file to accommodate for additional wallet instructions.\n</p>\n<p class=\"text-break\">\n- If possible, go through the document and process with your loved ones before you perish with a test wallet.\n</p>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n              Who Created This?\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"2\">\n              <Card.Body>\n              <p>\n              I did! Hello! My name is Lü Calm  {'  '}\n              <span aria-label=\"Beaming Smiley Face\" role=\"img\">&#128522;</span>\n\n                </p>\n              <p>\n              Eth-ter-I-Die is my first attempt at a coding project.\n              </p>\n              <p>\n              I was researching a method of how my Mum could benefit from my research and investments in Ethereum if I die. Something that would help explain key concepts so she can run through the process herself. I couldn’t find anything that really fit the bill. So I decided to make it myself! Not knowing how to code initially didn’t stop me and Eth-ter-I-Die is the result.\n              </p>\n              <p>\n              I use Eth-ter-I-Die myself and initially I am adding the DApps and services I use in order to create my “How to retrieve my Ethereum Assets when I Die” Guide. Now I am adding DApps and services that other people want to see added so it can help them too.\n              </p>\n              <p>\n\n              I am seeing first hand how complicated Ethereum and its ecosystem is for the less technologically minded. I believe we need to make it easier for our loved ones to understand this technology so they can benefit when we die. Hence I will keep improving Eth-ter-I-Die as best as I can for as long as I can.\n\n              </p>\n\n              <p>\nAnyway, you can see the painstaking process to get to this stage via my Eth-ter-I-Die Development YouTube playlist below.              </p>\n              <p class=\"text-center\">\n              <SocialIcon url=\"https://www.youtube.com/playlist?list=PLW-TtH0Ie84bBTkv1cVVI0L_7kLRZ-UmY\" bgColor=\"#000000\"/>\n\n\n              </p>\n\n\n              <p>\n              Here are all of my social links to learn more about updates to Eth-ter-I-Die, upcoming projects or contact me.\n              </p>\n                <PersonalSocial />\n\n\n\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"3\">\n              Feature Roadmap\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"3\">\n              <Card.Body>\n            <p>Eth-ter-I-Die is constantly under development if you want to help out head to <NavLink to=\"https://github.com/lu-calm/eth-ter-i-die\">The GitHub</NavLink> </p>\n\n            <p>\n            Here are some planned feature to Eth-ter-I-Die for the short and long term\n            </p>\n\n            <p>\n            <dl>\n  <dt>Short Term</dt>\n  <dd>\n  - Add Ledger Hardware Wallet instructions (just saving up for one...)\n  </dd>\n  <dd>\n- Add MakerDao DApp instructions\n  </dd>\n  <dd>\n- Add OpenSea DApp instructions\n  </dd>\n  <dd>\n- Add more DApp and Service instructions!\n  </dd>\n  <dt>Long Term</dt>\n  <dd>- Make decentralised (currently hosted on GitHub Pages...)</dd>\n  <dd>\n- Add Language Support\n  </dd>\n  <dd>\n- Add \"Create Dapp Instructions submission\" form\n  </dd>\n  </dl>\n            </p>\n\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"5\">\n              Archived News\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"5\">\n              <Card.Body>\n            <p>\n            <dl>\n            <dt>\n            14/08/2020\n            </dt>\n            <dd>\n            Alpha version released\n            </dd>\n            <dt>\n            13/08/2020\n            </dt>\n            <dd>\n            There is no previous news or updates...\n            </dd>\n            </dl>\n            </p>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n\n        </Accordion>\n\n        </Container>\n\n    );\n  }\n}\n\nexport default About;\n","import React from 'react';\n\nimport {\n  Route,\n  NavLink,\n  HashRouter\n} from \"react-router-dom\";\nimport Home from \"./home.js\";\nimport TextFiles from \"./textfiles.js\";\nimport Support from \"./support.js\";\nimport About from \"./about.js\";\nimport \"./App.css\";\n\n\n\n\nconst EtIDNav = () => (\n<>\n\n<HashRouter>\n        <div>\n          <h1>Eth-ter-I-Die</h1>\n            <ul className=\"header\">\n            <li><NavLink exact to=\"/\">Home</NavLink></li>\n            <li><NavLink to=\"/about\">About</NavLink></li>\n            <li><NavLink to=\"/textfiles\">The Files</NavLink></li>\n            <li><NavLink to=\"/support\">Support</NavLink></li>\n\n          </ul>\n          <div className=\"content\">\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/about\" component={About}/>\n          <Route path=\"/textfiles\" component={TextFiles}/>\n          <Route path=\"/support\" component={Support}/>\n\n          </div>\n        </div>\n      </HashRouter>\n\n</>\n\n);\n\n\nexport default EtIDNav;\n","import React from 'react';\n\nimport { Facebook, Twitter, Email, Reddit } from 'react-sharingbuttons'\n\n\nconst SharingButtons = () => {\n  const url = 'https://eth-ter-i-die.rip/'\n  const shareText = 'Check out Eth-ter-I-Die. Use it to guide your loved ones to your Ethereum assets after you have popped your clogs!'\n\n  return (\n    <div>\n\n    <p>\n    Share via: {'  '}\n      <Email url={url} /> {'  '}\n      <Twitter url={url} shareText={shareText} />{'  '}\n      <Reddit url={url} />{'  '}\n      <Facebook url={url} />\n      </p>\n\n    </div>\n  )\n}\n\n\nexport default SharingButtons;\n","import React from 'react';\n\nimport { SocialIcon } from 'react-social-icons';\n\n\nconst SiteSocial = () => {\n    return (\n    <div>\n     <p>Contact: {'  '}\n     <SocialIcon url=\"https://twitter.com/lu_calm\" bgColor=\"#000000\" style={{ height: 35, width: 35 }}/> {'  '}\n    <SocialIcon url=\"https://github.com/lu-calm/eth-ter-i-die\" bgColor=\"#000000\" style={{ height: 35, width: 35 }}/> {'  '}\n     <SocialIcon url=\"https://www.youtube.com/playlist?list=PLW-TtH0Ie84bBTkv1cVVI0L_7kLRZ-UmY\" bgColor=\"#000000\"style={{ height: 35, width: 35 }}/>\n\n\n      </p>\n\n    </div>\n  )\n}\n\n\nexport default SiteSocial;\n","import React from 'react';\n\nimport { Container, Jumbotron } from 'react-bootstrap'\n\nimport SharingButtons from './socialshare.js';\nimport SiteSocial from './sitesocials.js';\n\nconst EtIDFooter= () => (\n\n<Jumbotron fluid>\n  <Container>\n    <p>\n    <pre>\n\n  <span aria-label=\"Heart\" role=\"img\">&#128420;</span>{' '}Donation Address: 0xa28910bcbe9a1b9119940343c02cae65c1b22cc5 <small><a href=\"https://etherscan.io/address/0xa28910bcbe9a1b9119940343c02cae65c1b22cc5\" target=\"_blank\" rel=\"noopener noreferrer\">\n    View on Etherscan\n  </a></small>\n  </pre>\n </p>\n\n <p>\n<SiteSocial />\n </p>\n    <p>\n<SharingButtons />\n    </p>\n\n  </Container>\n</Jumbotron>\n\n  );\n\nexport default EtIDFooter;\n","import React from 'react';\n\nimport { introAndEndData } from './core.js';\n\nimport EtIDNav from './EtIDNav.js';\n\nimport EtIDFooter from './EtIDFooter.js';\n\nwindow.onload = function() {\n  introAndEndData();\n};\n\nconst App = () => (\n    <>\n\n    <EtIDNav />\n\n    <EtIDFooter/>\n   </>\n    );\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}>< App /></Router>, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/logoxs.8faf6898.svg\";"],"sourceRoot":""}